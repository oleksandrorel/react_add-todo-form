{"version":3,"sources":["components/UserFolder/User.js","components/Todo/Todo.js","components/TodoListFolder/TodoList.js","components/AddTodo/AddTodo.js","api/users.js","App.js","api/todos.js","index.js"],"names":["User","user","className","name","PropTypes","number","string","bool","shape","Todo","title","completed","status","TodoList","todos","map","todo","key","id","classNames","even","AddTodo","state","titleCheck","userCheck","handleChange","e","target","value","setState","checkInputs","props","usersList","todosList","addTodo","selectedUser","find","userEl","newTodo","length","clearForm","this","onSubmit","preventDefault","type","placeholder","onChange","React","Component","users","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","App","prevState","ReactDOM","render","document","getElementById"],"mappings":"wZAIO,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACrB,OACE,oCACE,uBAAGC,UAAU,QAAb,sBAEG,IACD,0BAAMA,UAAU,YACbD,EAAKE,QAQNC,IAAUC,OACdD,IAAUC,OACPD,IAAUE,OACNF,IAAUG,KACfH,IAAUI,MAAM,CACpBL,KAAMC,IAAUE,S,MCpBb,SAASG,EAAT,GAA2C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,UAAWV,EAAQ,EAARA,KACjCW,EAASD,EAAY,YAAc,oBAEzC,OACE,oCACE,uBAAGT,UAAU,SAAb,QAEG,IACAQ,GAGH,qCAEG,IACD,0BAAMR,UAAWS,EAAY,YAAc,gBACxCC,IAIL,kBAAC,EAAD,CAAMX,KAAMA,KChBX,SAASY,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACzB,OACE,oCACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,yBACEC,IAAKD,EAAKE,GACVhB,UAAWiB,IAAW,MACpB,CAAEC,KAAMJ,EAAKE,GAAK,IAAM,KAE1B,kBAAC,EAASF,Q,WCVPK,G,MAAb,4MACEC,MAAQ,CACNZ,MAAO,GACPT,KAAM,GACNsB,YAAY,EACZC,WAAW,GALf,EAQEC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBxB,EADY,EACZA,KAAMyB,EADM,EACNA,MAEd,EAAKC,SAAL,eAAiB1B,EAAOyB,KAX5B,EAcEE,YAAc,WAAO,IAAD,EACM,EAAKR,MAArBZ,EADU,EACVA,MAAOT,EADG,EACHA,KADG,EAEwB,EAAK8B,MAAvCC,EAFU,EAEVA,UAAWC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,QACxBC,EAAeH,EAAUI,MAAK,SAAAC,GAAM,OAAIA,EAAOlC,OAASF,KACxDqC,EAAU,CACd5B,MAAO,EAAKY,MAAMZ,MAClBQ,GAAIe,EAAUM,OAAS,EACvB5B,WAAW,EACXV,KAAMkC,GAGJzB,GAAST,IACXiC,EAAQI,GACR,EAAKE,aAGF9B,GACH,EAAKmB,SAAS,CACZN,YAAY,IAIXtB,GACH,EAAK4B,SAAS,CACZL,WAAW,KAtCnB,EA2CEgB,UAAY,WACV,EAAKX,SAAS,CACZnB,MAAO,GACPT,KAAM,GACNsB,YAAY,EACZC,WAAW,KAhDjB,4CAoDE,WAAU,IAAD,SACwCiB,KAAKnB,MAA5CZ,EADD,EACCA,MAAOT,EADR,EACQA,KAAMsB,EADd,EACcA,WAAYC,EAD1B,EAC0BA,UACzBQ,EAAcS,KAAKV,MAAnBC,UAER,OACE,yBAAK9B,UAAU,WACb,wBAAIA,UAAU,UAAd,uBACA,0BAAMwC,SAAU,SAAChB,GACfA,EAAEiB,iBACF,EAAKb,gBAGL,uBACE5B,UAAU,eADZ,mBAKEqB,IAAeb,GACZ,uBAAGR,UAAU,cAAb,uBACL,2BACE0C,KAAK,OACLzC,KAAK,QACL0C,YAAY,QACZjB,MAAOlB,EACPoC,SAAUL,KAAKhB,eAGjB,uBACEvB,UAAU,eADZ,kBAKEsB,IAAcvB,GACX,uBAAGC,UAAU,cAAb,yBACL,4BACEC,KAAK,OACLyB,MAAO3B,EACP6C,SAAUL,KAAKhB,cAEf,4BAAQG,MAAM,IAAd,iBAGCI,EAAUjB,KAAI,SAAAsB,GAAM,OACnB,4BAAQpB,IAAKoB,EAAOnB,IAAKmB,EAAOlC,UAGpC,6BACA,4BACEyC,KAAK,SACL1C,UAAU,OAFZ,gBAnGV,GAA6B6C,IAAMC,YCmOpBC,EAzOD,CACZ,CACE/B,GAAI,EACJf,KAAM,gBACN+C,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACP3D,KAAM,kBACN4D,YAAa,yCACbC,GAAI,gCAGR,CACE9C,GAAI,EACJf,KAAM,eACN+C,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACP3D,KAAM,eACN4D,YAAa,iCACbC,GAAI,qCAGR,CACE9C,GAAI,EACJf,KAAM,mBACN+C,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACP3D,KAAM,qBACN4D,YAAa,oCACbC,GAAI,oCAGR,CACE9C,GAAI,EACJf,KAAM,mBACN+C,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACP3D,KAAM,gBACN4D,YAAa,2CACbC,GAAI,yCAGR,CACE9C,GAAI,EACJf,KAAM,mBACN+C,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACP3D,KAAM,cACN4D,YAAa,uCACbC,GAAI,qCAGR,CACE9C,GAAI,EACJf,KAAM,uBACN+C,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACP3D,KAAM,oBACN4D,YAAa,qCACbC,GAAI,qCAGR,CACE9C,GAAI,EACJf,KAAM,kBACN+C,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACP3D,KAAM,cACN4D,YAAa,qCACbC,GAAI,kCAGR,CACE9C,GAAI,EACJf,KAAM,2BACN+C,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACP3D,KAAM,kBACN4D,YAAa,gCACbC,GAAI,kCAGR,CACE9C,GAAI,EACJf,KAAM,kBACN+C,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACP3D,KAAM,gBACN4D,YAAa,wCACbC,GAAI,qCAGR,CACE9C,GAAI,GACJf,KAAM,qBACN+C,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACP3D,KAAM,aACN4D,YAAa,oCACbC,GAAI,8BC5NJC,ECNQ,CACZ,CACEC,OAAQ,EACRhD,GAAI,EACJR,MAAO,qBACPC,WAAW,GAEb,CACEuD,OAAQ,EACRhD,GAAI,EACJR,MAAO,qCACPC,WAAW,IDLaI,KAAI,SAAAC,GAAI,kCAC/BA,GAD+B,IAElCf,KAAMgD,EAAMb,MAAK,SAAAnC,GAAI,OAAIA,EAAKiB,KAAOF,EAAKkD,eAiJ7BC,E,4MA7Ib7C,MAAQ,CACNW,UAAWgC,G,EAGb/B,QAAU,SAAClB,GACT,EAAKa,UAAS,SAAAuC,GAAS,MACrB,CACEnC,UAAU,GAAD,mBAAMmC,EAAUnC,WAAhB,CAA2BjB,S,4CAK1C,WAAU,IACAiB,EAAcQ,KAAKnB,MAAnBW,UAER,OACE,yBAAK/B,UAAU,OAEb,kBAAC,EAAD,CACE+B,UAAWA,EACXD,UAAWiB,EACXf,QAASO,KAAKP,UAEhB,kBAAC,EAAD,CAAUpB,MAAOmB,S,GAxBPc,IAAMC,WETxBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.98e2ff14.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nexport function User({ user }) {\n  return (\n    <>\n      <p className=\"user\">\n        Responsible person:\n        {' '}\n        <span className=\"userName\">\n          {user.name}\n        </span>\n      </p>\n    </>\n  );\n}\n\nexport const prepearedTodosType = {\n  userId: PropTypes.number,\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n\nUser.propTypes = {\n  user: prepearedTodosType.user.isRequired,\n};\n","import React from 'react';\nimport { User, prepearedTodosType } from '../UserFolder/User';\nimport './Todo.css';\n\nexport function Todo({ title, completed, user }) {\n  const status = completed ? 'Completed' : 'Not completed yet';\n\n  return (\n    <>\n      <p className=\"title\">\n        Todo:\n        {' '}\n        {title}\n      </p>\n\n      <p>\n        Status:\n        {' '}\n        <span className={completed ? 'completed' : 'notCompleted'}>\n          {status}\n        </span>\n      </p>\n\n      <User user={user} />\n    </>\n  );\n}\n\nTodo.propTypes = {\n  title: prepearedTodosType.title.isRequired,\n  completed: prepearedTodosType.completed.isRequired,\n  user: prepearedTodosType.user.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { Todo } from '../Todo';\nimport { prepearedTodosType } from '../UserFolder';\n\nexport function TodoList({ todos }) {\n  return (\n    <>\n      {todos.map(todo => (\n        <div\n          key={todo.id}\n          className={classNames(`row`,\n            { even: todo.id % 2 === 0 })}\n        >\n          <Todo {...todo} />\n        </div>\n      ))}\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    prepearedTodosType,\n  )).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { prepearedTodosType } from '../UserFolder';\n\nimport './AddTodo.css';\n\nexport class AddTodo extends React.Component {\n  state = {\n    title: '',\n    user: '',\n    titleCheck: true,\n    userCheck: true,\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  checkInputs = () => {\n    const { title, user } = this.state;\n    const { usersList, todosList, addTodo } = this.props;\n    const selectedUser = usersList.find(userEl => userEl.name === user);\n    const newTodo = {\n      title: this.state.title,\n      id: todosList.length + 1,\n      completed: false,\n      user: selectedUser,\n    };\n\n    if (title && user) {\n      addTodo(newTodo);\n      this.clearForm();\n    }\n\n    if (!title) {\n      this.setState({\n        titleCheck: false,\n      });\n    }\n\n    if (!user) {\n      this.setState({\n        userCheck: false,\n      });\n    }\n  }\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      user: '',\n      titleCheck: true,\n      userCheck: true,\n    });\n  }\n\n  render() {\n    const { title, user, titleCheck, userCheck } = this.state;\n    const { usersList } = this.props;\n\n    return (\n      <div className=\"addForm\">\n        <h1 className=\"header\">React add TODO form</h1>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          this.checkInputs();\n        }}\n        >\n          <p\n            className=\"inputHeader\"\n          >\n            Title of todo:\n          </p>\n          {!titleCheck && !title\n            && <p className=\"wrnMessage\">Add a title, please</p>}\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n\n          <p\n            className=\"inputHeader\"\n          >\n            User of todo:\n          </p>\n          {!userCheck && !user\n            && <p className=\"wrnMessage\">Select a user, please</p>}\n          <select\n            name=\"user\"\n            value={user}\n            onChange={this.handleChange}\n          >\n            <option value=\"\">\n              Choose a user\n            </option>\n            {usersList.map(userEl => (\n              <option key={userEl.id}>{userEl.name}</option>\n            ))}\n          </select>\n          <br />\n          <button\n            type=\"submit\"\n            className=\"btn\"\n          >\n            To add\n          </button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  usersList: PropTypes.arrayOf(prepearedTodosType.user).isRequired,\n  addTodo: PropTypes.func.isRequired,\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: prepearedTodosType.title,\n    id: prepearedTodosType.id,\n    completed: prepearedTodosType.completed,\n    user: prepearedTodosType.user,\n  })).isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoListFolder';\nimport { AddTodo } from './components/AddTodo';\n\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst preparedTodos = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todosList: preparedTodos,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => (\n      {\n        todosList: [...prevState.todosList, todo],\n      }\n    ));\n  }\n\n  render() {\n    const { todosList } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <AddTodo\n          todosList={todosList}\n          usersList={users}\n          addTodo={this.addTodo}\n        />\n        <TodoList todos={todosList} />\n      </div>\n    );\n  }\n}\n\n// class App extends React.Component {\n//   state = {\n//     todosList: preparedTodos,\n//     title: '',\n//     user: '',\n//     titleCheck: true,\n//     userCheck: true,\n//   }\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     this.setState({ [name]: value });\n//   }\n\n//   addTodo = () => {\n//     const { title, user } = this.state;\n//     const user1 = users.find(userEl => userEl.name === user);\n\n//     if (title && user) {\n//       this.setState(prevState => (\n//         {\n//           todosList: [...prevState.todosList,\n//             {\n//               title: prevState.title,\n//               id: prevState.todosList.length + 1,\n//               completed: false,\n//               user: user1,\n//             }],\n//         }\n//       ));\n//       this.clearForm();\n//     }\n\n//     if (!title) {\n//       this.setState({\n//         titleCheck: false,\n//       });\n//     }\n\n//     if (!user) {\n//       this.setState({\n//         userCheck: false,\n//       });\n//     }\n//   }\n\n//   clearForm = () => {\n//     this.setState({\n//       title: '',\n//       user: '',\n//       titleCheck: true,\n//       userCheck: true,\n//     });\n//   }\n\n//   render() {\n//     const { todosList, title, user, titleCheck, userCheck } = this.state;\n\n//     return (\n//       <div className=\"App\">\n//         <h1>Add todo form</h1>\n\n//         <div className=\"add form\">\n//           <form onSubmit={(e) => {\n//             e.preventDefault();\n//             this.addTodo();\n//           }}\n//           >\n//             <p>Title of todo:</p>\n//             {!titleCheck\n//               && <p>Add a title, please</p>}\n//             <input\n//               type=\"text\"\n//               name=\"title\"\n//               placeholder=\"Title\"\n//               value={title}\n//               onChange={this.handleChange}\n//             />\n\n//             <p>User of todo:</p>\n//             {!userCheck\n//               && <p>Select a user, please</p>}\n//             <select\n//               name=\"user\"\n//               value={user}\n//               onChange={this.handleChange}\n//             >\n//               <option value=\"\">\n//                 Choose a user\n//               </option>\n//               {users.map(userEl => (\n//                 <option key={userEl.id}>{userEl.name}</option>\n//               ))}\n//             </select>\n//             <br />\n//             <button\n//               type=\"submit\"\n//             >\n//               To add\n//             </button>\n\n//           </form>\n\n//         </div>\n\n//         <TodoList todos={todosList} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}